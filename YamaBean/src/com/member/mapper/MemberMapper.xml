<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.member.mapper.MemberMapper">
	<resultMap type="com.member.dto.Member" id="MemberResult">
		<id property="id" column="id" />
		<result property="password" column="password" />
		<result property="name" column="name" />
		<result property="gender" column="gender" />
		<result property="phone" column="phone" />
		<result property="nickname" column="nickname" />
		<result property="zipcode" column="zipcode" />
		<result property="address" column="address" />
		<result property="bday" column="bday" />
		<result property="email" column="email" />
		<result property="joinday" column="joinday" />
		<result property="point" column="point" />

	</resultMap>

	<insert id="insertMember" parameterType="com.member.dto.Member">
		insert into members (id,
		password, name, gender, phone, nickname, zipcode, address, bday, email) values
		(#{id},#{password},#{name}, #{gender},
		#{phone},#{nickname},#{zipcode},#{address},to_date(#{bday},
		'yyyy-MM-dd'),#{email})
	</insert>


	<resultMap type="com.admin.dto.OrderList" id="orderList">
		<id property="order_num" column="order_num" />
		<result property="totalprice" column="total_price" />
		<result property="store_num" column="store_num" />
		<association property="member" column="member_id"
			select="com.member.mapper.MemberMapper.selectByMember" />
		<collection property="orderProduct" column="order_num"
			select="com.order.mapper.OrderMapper.selectByOrder_p" />
	</resultMap>


	<select id="selectByOrderList" parameterType="String" resultMap="orderList">
		select order_num, total_price, store_num, member_id, order_num,
		sub_day, ranking
		from
		(
		select order_num, total_price, store_num, member_id, sub_day,
		rank() over(order by sub_day desc) as ranking
		from orders where member_id=#{id}
		)
		where ranking between 1 and 3
	</select>

	<select id="selectByMember" parameterType="string"
		resultType="com.member.dto.Member">
		select id, password, name, gender, phone, nickname, zipcode, address, bday, to_char(joinday, 'yyyy-mm-dd'), email from members where id = #{id}
	</select>

	<update id="updateMember" parameterType="com.member.dto.Member">

	</update>
	
	<select id="overLapCheckID" parameterType="String" resultType="com.member.dto.Member" >
	    select * from members where id=#{keyword}
	</select>
	
	<select id="overLapCheckNickName" parameterType="String" resultType="com.member.dto.Member" >
	    select * from members where nickname=#{keyword}
	</select>
	
	<select id="overLapCheckEmail" parameterType="String" resultType="com.member.dto.Member" >
	    select * from members where email=#{keyword}
	</select>
	


	<delete id="deleteMember" parameterType="int">
		delete members where id=#{id}
	</delete>
	
	<select id="forgotten" parameterType="com.member.dto.Forgotten" resultType="com.member.dto.Member">
	    select * from members where name=#{name} and email=#{email}
	    <if test="id != null">
	        and id=#{id}
	    </if>
	</select>

</mapper>

